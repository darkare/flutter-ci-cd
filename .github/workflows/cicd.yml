
name: ci/cd

on: 
  pull_request:
    branches: [develop]
  push:
    branches: [develop, test, master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  flutter_version: "2.8.1"

jobs:
  # This workflow contains a single job called "build"
  cicd:
    runs-on: ${{ matrix.os }}                           
    strategy:                             
      matrix:                               
        os: [ubuntu-latest]                               
        include:                                 
          - os: ubuntu-latest                                   
            flutter_path: /opt/hostedtoolcache/flutter

    # The type of runner that the job will run on
    # runs-on: ubuntu-latest
    # include:
    #   - os: 
    #     flutter_path: /opt/hostedtoolcache/flutter

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2



      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version:  ${{ env.flutter_version }}
          channel: 'stable'

      - run: flutter config --enable-web
      - run: flutter pub get
      # - run: npm i -g get-graphql-schema
      # - run: get-graphql-schema -h x-hasura-admin-secret=${{DEV_HASURA_ADMIN_SECRET}}
      # - run: flutter pub run build_runner build
      - run: flutter test
      - run: flutter build web --release

      - name: Deploy to Dev environment
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy --only hosting
        env: 
            FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
            PROJECT_ID: ${{secrets.FIREBASE_DEV_PROJECT_ID}} 

      - name: Run semantic release
        # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm ci
          npx semantic-release

